// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: disperser/disperser.proto

package disperser

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlobStatus int32

const (
	BlobStatus_UNKNOWN BlobStatus = 0
	// PROCESSING means that the blob is currently being processed by the disperser
	BlobStatus_PROCESSING BlobStatus = 1
	// CONFIRMED means that the blob has been dispersed to DA Nodes and the dispersed
	// batch containing the blob has been confirmed onchain
	BlobStatus_CONFIRMED BlobStatus = 2
	// FAILED means that the blob has failed permanently (for reasons other than insufficient
	// signatures, which is a separate state)
	BlobStatus_FAILED BlobStatus = 3
	// FINALIZED means that the block containing the blob's confirmation transaction has been finalized on Ethereum
	BlobStatus_FINALIZED BlobStatus = 4
	// INSUFFICIENT_SIGNATURES means that the quorum threshold for the blob was not met
	// for at least one quorum.
	BlobStatus_INSUFFICIENT_SIGNATURES BlobStatus = 5
)

// Enum value maps for BlobStatus.
var (
	BlobStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PROCESSING",
		2: "CONFIRMED",
		3: "FAILED",
		4: "FINALIZED",
		5: "INSUFFICIENT_SIGNATURES",
	}
	BlobStatus_value = map[string]int32{
		"UNKNOWN":                 0,
		"PROCESSING":              1,
		"CONFIRMED":               2,
		"FAILED":                  3,
		"FINALIZED":               4,
		"INSUFFICIENT_SIGNATURES": 5,
	}
)

func (x BlobStatus) Enum() *BlobStatus {
	p := new(BlobStatus)
	*p = x
	return p
}

func (x BlobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_disperser_disperser_proto_enumTypes[0].Descriptor()
}

func (BlobStatus) Type() protoreflect.EnumType {
	return &file_disperser_disperser_proto_enumTypes[0]
}

func (x BlobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlobStatus.Descriptor instead.
func (BlobStatus) EnumDescriptor() ([]byte, []int) {
	return file_disperser_disperser_proto_rawDescGZIP(), []int{0}
}

type DisperseBlobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The data to be dispersed.
	// The size of data must be <= 512KiB.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DisperseBlobRequest) Reset() {
	*x = DisperseBlobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disperser_disperser_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisperseBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisperseBlobRequest) ProtoMessage() {}

func (x *DisperseBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disperser_disperser_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisperseBlobRequest.ProtoReflect.Descriptor instead.
func (*DisperseBlobRequest) Descriptor() ([]byte, []int) {
	return file_disperser_disperser_proto_rawDescGZIP(), []int{0}
}

func (x *DisperseBlobRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DisperseBlobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The status of the blob associated with the request_id.
	Result BlobStatus `protobuf:"varint,1,opt,name=result,proto3,enum=disperser.BlobStatus" json:"result,omitempty"`
	// The request ID generated by the disperser.
	// Once a request is accepted (although not processed), a unique request ID will be
	// generated.
	// Two different DisperseBlobRequests (determined by the hash of the DisperseBlobRequest)
	// will have different IDs, and the same DisperseBlobRequest sent repeatedly at different
	// times will also have different IDs.
	// The client should use this ID to query the processing status of the request (via
	// the GetBlobStatus API).
	RequestId []byte `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *DisperseBlobReply) Reset() {
	*x = DisperseBlobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disperser_disperser_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisperseBlobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisperseBlobReply) ProtoMessage() {}

func (x *DisperseBlobReply) ProtoReflect() protoreflect.Message {
	mi := &file_disperser_disperser_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisperseBlobReply.ProtoReflect.Descriptor instead.
func (*DisperseBlobReply) Descriptor() ([]byte, []int) {
	return file_disperser_disperser_proto_rawDescGZIP(), []int{1}
}

func (x *DisperseBlobReply) GetResult() BlobStatus {
	if x != nil {
		return x.Result
	}
	return BlobStatus_UNKNOWN
}

func (x *DisperseBlobReply) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

// BlobStatusRequest is used to query the status of a blob.
type BlobStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *BlobStatusRequest) Reset() {
	*x = BlobStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disperser_disperser_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobStatusRequest) ProtoMessage() {}

func (x *BlobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disperser_disperser_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobStatusRequest.ProtoReflect.Descriptor instead.
func (*BlobStatusRequest) Descriptor() ([]byte, []int) {
	return file_disperser_disperser_proto_rawDescGZIP(), []int{2}
}

func (x *BlobStatusRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

type BlobStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The status of the blob.
	Status BlobStatus `protobuf:"varint,1,opt,name=status,proto3,enum=disperser.BlobStatus" json:"status,omitempty"`
	// The blob info needed for clients to confirm the blob against the ZGDA contracts.
	Info *BlobInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *BlobStatusReply) Reset() {
	*x = BlobStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disperser_disperser_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobStatusReply) ProtoMessage() {}

func (x *BlobStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_disperser_disperser_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobStatusReply.ProtoReflect.Descriptor instead.
func (*BlobStatusReply) Descriptor() ([]byte, []int) {
	return file_disperser_disperser_proto_rawDescGZIP(), []int{3}
}

func (x *BlobStatusReply) GetStatus() BlobStatus {
	if x != nil {
		return x.Status
	}
	return BlobStatus_UNKNOWN
}

func (x *BlobStatusReply) GetInfo() *BlobInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// RetrieveBlobRequest contains parameters to retrieve the blob.
type RetrieveBlobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The hash of data
	StorageRoot []byte `protobuf:"bytes,1,opt,name=storage_root,json=storageRoot,proto3" json:"storage_root,omitempty"`
	// This identifies the epoch that this blob belongs to.
	Epoch uint64 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Which quorum of the blob this is requesting for (note a blob can participate in
	// multiple quorums).
	QuorumId uint64 `protobuf:"varint,3,opt,name=quorum_id,json=quorumId,proto3" json:"quorum_id,omitempty"`
}

func (x *RetrieveBlobRequest) Reset() {
	*x = RetrieveBlobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disperser_disperser_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveBlobRequest) ProtoMessage() {}

func (x *RetrieveBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disperser_disperser_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveBlobRequest.ProtoReflect.Descriptor instead.
func (*RetrieveBlobRequest) Descriptor() ([]byte, []int) {
	return file_disperser_disperser_proto_rawDescGZIP(), []int{4}
}

func (x *RetrieveBlobRequest) GetStorageRoot() []byte {
	if x != nil {
		return x.StorageRoot
	}
	return nil
}

func (x *RetrieveBlobRequest) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *RetrieveBlobRequest) GetQuorumId() uint64 {
	if x != nil {
		return x.QuorumId
	}
	return 0
}

// RetrieveBlobReply contains the retrieved blob data
type RetrieveBlobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RetrieveBlobReply) Reset() {
	*x = RetrieveBlobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disperser_disperser_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveBlobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveBlobReply) ProtoMessage() {}

func (x *RetrieveBlobReply) ProtoReflect() protoreflect.Message {
	mi := &file_disperser_disperser_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveBlobReply.ProtoReflect.Descriptor instead.
func (*RetrieveBlobReply) Descriptor() ([]byte, []int) {
	return file_disperser_disperser_proto_rawDescGZIP(), []int{5}
}

func (x *RetrieveBlobReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// BlobInfo contains information needed to confirm the blob against the ZGDA contracts
type BlobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlobHeader *BlobHeader `protobuf:"bytes,1,opt,name=blob_header,json=blobHeader,proto3" json:"blob_header,omitempty"`
}

func (x *BlobInfo) Reset() {
	*x = BlobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disperser_disperser_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfo) ProtoMessage() {}

func (x *BlobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_disperser_disperser_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfo.ProtoReflect.Descriptor instead.
func (*BlobInfo) Descriptor() ([]byte, []int) {
	return file_disperser_disperser_proto_rawDescGZIP(), []int{6}
}

func (x *BlobInfo) GetBlobHeader() *BlobHeader {
	if x != nil {
		return x.BlobHeader
	}
	return nil
}

type BlobHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The data merkle root
	StorageRoot []byte `protobuf:"bytes,4,opt,name=storage_root,json=storageRoot,proto3" json:"storage_root,omitempty"`
	// Signers epoch
	Epoch uint64 `protobuf:"varint,5,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Signers quorum id
	QuorumId uint64 `protobuf:"varint,6,opt,name=quorum_id,json=quorumId,proto3" json:"quorum_id,omitempty"`
}

func (x *BlobHeader) Reset() {
	*x = BlobHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disperser_disperser_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobHeader) ProtoMessage() {}

func (x *BlobHeader) ProtoReflect() protoreflect.Message {
	mi := &file_disperser_disperser_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobHeader.ProtoReflect.Descriptor instead.
func (*BlobHeader) Descriptor() ([]byte, []int) {
	return file_disperser_disperser_proto_rawDescGZIP(), []int{7}
}

func (x *BlobHeader) GetStorageRoot() []byte {
	if x != nil {
		return x.StorageRoot
	}
	return nil
}

func (x *BlobHeader) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *BlobHeader) GetQuorumId() uint64 {
	if x != nil {
		return x.QuorumId
	}
	return 0
}

var File_disperser_disperser_proto protoreflect.FileDescriptor

var file_disperser_disperser_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x70,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x64, 0x69, 0x73,
	0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72,
	0x73, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x61, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x42, 0x6c, 0x6f,
	0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64, 0x69,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x6b, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x42,
	0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64,
	0x22, 0x27, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x62,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x08, 0x42, 0x6c, 0x6f,
	0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x69, 0x73,
	0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x62, 0x0a,
	0x0a, 0x42, 0x6c, 0x6f, 0x62, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x49,
	0x64, 0x2a, 0x70, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x4e, 0x41, 0x4c,
	0x49, 0x5a, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x53, 0x55, 0x46, 0x46,
	0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x53, 0x10, 0x05, 0x32, 0xf8, 0x01, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x12, 0x4e, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x42, 0x6c, 0x6f,
	0x62, 0x12, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x42,
	0x6c, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e,
	0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x1e,
	0x2e, 0x64, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x64, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x33,
	0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x30, 0x67, 0x6c,
	0x61, 0x62, 0x73, 0x2f, 0x30, 0x67, 0x2d, 0x64, 0x61, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x69, 0x73, 0x70, 0x65, 0x72,
	0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_disperser_disperser_proto_rawDescOnce sync.Once
	file_disperser_disperser_proto_rawDescData = file_disperser_disperser_proto_rawDesc
)

func file_disperser_disperser_proto_rawDescGZIP() []byte {
	file_disperser_disperser_proto_rawDescOnce.Do(func() {
		file_disperser_disperser_proto_rawDescData = protoimpl.X.CompressGZIP(file_disperser_disperser_proto_rawDescData)
	})
	return file_disperser_disperser_proto_rawDescData
}

var file_disperser_disperser_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_disperser_disperser_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_disperser_disperser_proto_goTypes = []interface{}{
	(BlobStatus)(0),             // 0: disperser.BlobStatus
	(*DisperseBlobRequest)(nil), // 1: disperser.DisperseBlobRequest
	(*DisperseBlobReply)(nil),   // 2: disperser.DisperseBlobReply
	(*BlobStatusRequest)(nil),   // 3: disperser.BlobStatusRequest
	(*BlobStatusReply)(nil),     // 4: disperser.BlobStatusReply
	(*RetrieveBlobRequest)(nil), // 5: disperser.RetrieveBlobRequest
	(*RetrieveBlobReply)(nil),   // 6: disperser.RetrieveBlobReply
	(*BlobInfo)(nil),            // 7: disperser.BlobInfo
	(*BlobHeader)(nil),          // 8: disperser.BlobHeader
}
var file_disperser_disperser_proto_depIdxs = []int32{
	0, // 0: disperser.DisperseBlobReply.result:type_name -> disperser.BlobStatus
	0, // 1: disperser.BlobStatusReply.status:type_name -> disperser.BlobStatus
	7, // 2: disperser.BlobStatusReply.info:type_name -> disperser.BlobInfo
	8, // 3: disperser.BlobInfo.blob_header:type_name -> disperser.BlobHeader
	1, // 4: disperser.Disperser.DisperseBlob:input_type -> disperser.DisperseBlobRequest
	3, // 5: disperser.Disperser.GetBlobStatus:input_type -> disperser.BlobStatusRequest
	5, // 6: disperser.Disperser.RetrieveBlob:input_type -> disperser.RetrieveBlobRequest
	2, // 7: disperser.Disperser.DisperseBlob:output_type -> disperser.DisperseBlobReply
	4, // 8: disperser.Disperser.GetBlobStatus:output_type -> disperser.BlobStatusReply
	6, // 9: disperser.Disperser.RetrieveBlob:output_type -> disperser.RetrieveBlobReply
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_disperser_disperser_proto_init() }
func file_disperser_disperser_proto_init() {
	if File_disperser_disperser_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_disperser_disperser_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisperseBlobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disperser_disperser_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisperseBlobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disperser_disperser_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disperser_disperser_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disperser_disperser_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveBlobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disperser_disperser_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveBlobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disperser_disperser_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disperser_disperser_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_disperser_disperser_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_disperser_disperser_proto_goTypes,
		DependencyIndexes: file_disperser_disperser_proto_depIdxs,
		EnumInfos:         file_disperser_disperser_proto_enumTypes,
		MessageInfos:      file_disperser_disperser_proto_msgTypes,
	}.Build()
	File_disperser_disperser_proto = out.File
	file_disperser_disperser_proto_rawDesc = nil
	file_disperser_disperser_proto_goTypes = nil
	file_disperser_disperser_proto_depIdxs = nil
}
